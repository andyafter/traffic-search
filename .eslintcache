[{"/Users/peng/Documents/bussiness/react/fe-traffic-search/src/index.js":"1","/Users/peng/Documents/bussiness/react/fe-traffic-search/src/reportWebVitals.js":"2","/Users/peng/Documents/bussiness/react/fe-traffic-search/src/App.js":"3","/Users/peng/Documents/bussiness/react/fe-traffic-search/src/pages/searchPage/searchPage.js":"4","/Users/peng/Documents/bussiness/react/fe-traffic-search/src/service/search.js":"5","/Users/peng/Documents/bussiness/react/fe-traffic-search/src/utils/request.js":"6"},{"size":500,"mtime":1610346538299,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1610346538302,"results":"9","hashOfConfig":"8"},{"size":529,"mtime":1610436628477,"results":"10","hashOfConfig":"8"},{"size":4433,"mtime":1610545258604,"results":"11","hashOfConfig":"8"},{"size":299,"mtime":1610536785679,"results":"12","hashOfConfig":"8"},{"size":1861,"mtime":1610537579937,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1gkobe3",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},"/Users/peng/Documents/bussiness/react/fe-traffic-search/src/index.js",[],["28","29"],"/Users/peng/Documents/bussiness/react/fe-traffic-search/src/reportWebVitals.js",[],"/Users/peng/Documents/bussiness/react/fe-traffic-search/src/App.js",[],"/Users/peng/Documents/bussiness/react/fe-traffic-search/src/pages/searchPage/searchPage.js",["30","31","32"],"/Users/peng/Documents/bussiness/react/fe-traffic-search/src/service/search.js",[],"/Users/peng/Documents/bussiness/react/fe-traffic-search/src/utils/request.js",["33","34"],"/**\n * ajax工具类\n * 也可用 axios(https://github.com/axios/axios)\n */\n\nconst joinQuery = function (params) {\n  console.log(\"params\", params);\n  var Querys = Object.keys(params)\n    .map((key) => {\n      return `${key}=${params[key]}`;\n    })\n    .join(\"&\");\n\n  return `?${Querys}`;\n};\n\n//原生ajx\nconst ajax = function (request) {\n  var r = new XMLHttpRequest();\n  r.open(request.method, request.url, true);\n  if (request.contentType !== undefined) {\n    r.setRequestHeader(\"Content-Type\", request.contentType);\n  }\n  r.onreadystatechange = function (event) {\n    if (r.readyState === 4) {\n      if (r.status == 200) {\n        const data = JSON.parse(r.response);\n        request.success(data);\n      }\n      if (r.status == 500) {\n        request.error();\n      }\n    }\n  };\n  if (request.method === \"GET\") {\n    r.send();\n  } else {\n    r.send(request.data);\n  }\n};\n\n//用Promise封装原生ajx\nconst ajaxPromise = function (url, method, form) {\n  var p = new Promise((resolve, reject) => {\n    const request = {\n      url: url,\n      method: method,\n      contentType: \"application/json\",\n      success: function (r) {\n        resolve(r);\n      },\n      error: function (e) {\n        const r = {\n          success: false,\n          message: \"网络错误, 请重新尝试\",\n        };\n        resolve(r);\n        //reject(r)\n      },\n    };\n    if (method === \"post\") {\n      const data = JSON.stringify(form);\n      request.data = data;\n    }\n    ajax(request);\n  });\n  return p;\n};\n\n//封装 ajaxPromise\nconst _ajax = {\n  get: (path, params = {}) => {\n    const url = path + joinQuery(params);\n    const method = \"get\";\n    const form = {};\n    return ajaxPromise(url, method, form);\n  },\n  post: (path, params = {}) => {\n    const url = path;\n    const method = \"post\";\n    return ajaxPromise(url, method, params);\n  },\n};\n\nmodule.exports = _ajax;\n",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":35,"column":16,"nodeType":"41","messageId":"42","endLine":35,"endColumn":18},{"ruleId":"39","severity":1,"message":"40","line":124,"column":36,"nodeType":"41","messageId":"42","endLine":124,"endColumn":38},{"ruleId":"39","severity":1,"message":"43","line":125,"column":31,"nodeType":"41","messageId":"42","endLine":125,"endColumn":33},{"ruleId":"39","severity":1,"message":"40","line":26,"column":20,"nodeType":"41","messageId":"42","endLine":26,"endColumn":22},{"ruleId":"39","severity":1,"message":"40","line":30,"column":20,"nodeType":"41","messageId":"42","endLine":30,"endColumn":22},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]